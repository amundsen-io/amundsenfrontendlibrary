/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint.
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
module.exports = {
    "env": {
        "browser": true,
        "node": true
    },
    "extends": [
        "airbnb",
        "prettier",
        "prettier/@typescript-eslint"
    ],
    "ignorePatterns": [
        "**/*{.,-}min.js",
        "**/*.sh",
        "coverage/**",
        "dist/*",
        "images/*",
        "node_modules/*",
        "node_modules*/*",
        "stylesheets/*",
        "vendor/*",
        "docs/*",
        "appbuilder/*",
        "**/*{.,-}min.js",
        "**/*.sh",
        "coverage/**",
        "dist/*",
        "images/*",
        "node_modules/*",
        "node_modules*/*",
        "stylesheets/*",
        "vendor/*",
        "docs/*",
        "appbuilder/*"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "tsconfig.json",
        "sourceType": "module",
        // "ecmaFeatures": {
        //   "experimentalObjectRestSpread": true
        // }
    },
    "plugins": [
        "@typescript-eslint",
        "@typescript-eslint/tslint"
    ],
    "rules": {
        "@typescript-eslint/member-delimiter-style": [
            "off",
            {
                "multiline": {
                    "delimiter": "none",
                    "requireLast": true
                },
                "singleline": {
                    "delimiter": "semi",
                    "requireLast": false
                }
            }
        ],
        "@typescript-eslint/no-param-reassign": "off",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
        "@typescript-eslint/semi": [
            "off",
            null
        ],
        "@typescript-eslint/tslint/config": [
            "error",
            {
                "lintFile": "./tslint.json",
                "rules": {
                    "function-name": true,
                    "jsx-boolean-value": true,
                    "jsx-key": true,
                    "jsx-no-bind": true,
                    "jsx-no-lambda": true,
                    "jsx-no-string-ref": true,
                    "jsx-self-close": true,
                    "no-else-after-return": true,
                    "no-function-constructor-with-string-args": true,
                    "no-increment-decrement": true,
                    "object-shorthand-properties-first": true,
                    "ter-prefer-arrow-callback": true
                }
            }
        ],
        "arrow-parens": [
            "off",
            "always"
        ],
        "brace-style": [
            "off",
            "off"
        ],
        "camelcase": "error",
        "curly": [
            "error",
            "multi-line"
        ],
        "eqeqeq": [
            "error",
            "smart"
        ],
        "id-blacklist": [
            "error",
            "any",
            "Number",
            "number",
            "String",
            "string",
            "Boolean",
            "boolean",
            "Undefined",
            "undefined"
        ],
        "id-match": "error",
        "no-duplicate-imports": "error",
        "no-eval": "error",
        "no-irregular-whitespace": "off",
        "no-new-wrappers": "error",
        "no-underscore-dangle": "error",
        "no-var": "error",
        "object-shorthand": "error",
        "one-var": [
            "error",
            "never"
        ],
        "prefer-const": "error",
        "prefer-template": "off",
        "radix": "error",
        "space-in-parens": [
            "off",
            "never"
        ],
        "spaced-comment": [
            "error",
            "always",
            {
                "markers": [
                    "/"
                ]
            }
        ],
        "new-cap": 0,
        "no-restricted-syntax": 0,
        "guard-for-in": 0,
        "prefer-arrow-callback": 0,
        "func-names": 0,
        "react/jsx-no-bind": 0,
        "no-confusing-arrow": 0,
        "jsx-a11y/no-static-element-interactions": 0,
        "jsx-a11y/anchor-has-content": 0,
        "jsx-a11y/anchor-is-valid": [ "error", {
            "components": [ "Link" ],
            "specialLink": [ "to", "hrefLeft", "hrefRight" ],
            "aspects": [ "noHref", "invalidHref", "preferButton" ]
          }],
        "react/require-default-props": 0,
        "no-plusplus": 0,
        "no-mixed-operators": 0,
        "no-continue": 0,
        "no-bitwise": 0,
        "no-undef": 0,
        "no-multi-assign": 0,
        "react/no-array-index-key": 0,
        "no-restricted-properties": 0,
        "no-prototype-builtins": 0,
        "jsx-a11y/href-no-hash": 0,
        "react/forbid-prop-types": 0,
        "class-methods-use-this": 0,
        "import/extensions": 0,
        "import/no-named-as-default": 0,
        "import/no-extraneous-dependencies": 0,
        "import/no-unresolved": 0,
        "import/prefer-default-export": 0,
        "react/no-unescaped-entities": 0,
        "react/no-unused-prop-types": 0,
        "react/no-string-refs": 0,
        "indent": 0,
        "no-multi-spaces": 0,
        "padded-blocks": 0,
    },
    "globals": {
        "document": true,
    },
    "settings": {
        "import/resolver": {
            "node": {
                "extensions": [
                    ".js",
                    ".jsx",
                    ".json",
                    ".tsx"
                ]
            }
        },
        "react": {
            "pragma": "React",
            "version": "detect"
        },
        "propWrapperFunctions": [
            "forbidExtraProps",
            "exact",
            "Object.freeze"
        ],
        "import/extensions": [
            ".js",
            ".mjs",
            ".jsx"
        ],
        "import/core-modules": [],
        "import/ignore": [
            "node_modules",
            "\\.(coffee|scss|css|less|hbs|svg|json)$"
        ]
    }
};
